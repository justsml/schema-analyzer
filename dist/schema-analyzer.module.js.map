{"version":3,"file":"schema-analyzer.module.js","sources":["../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/_baseUnary.js","../node_modules/lodash-es/_nodeUtil.js","../node_modules/lodash-es/_baseIsDate.js","../node_modules/lodash-es/isDate.js","../utils/type-detectors.js","../type-helpers.mjs","../index.mjs"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nexport default baseIsDate;\n","import baseIsDate from './_baseIsDate.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nexport default isDate;\n","import {isDate} from 'lodash-es'\nexport {\n  isBoolish,\n  isCurrency,\n  isDateString,\n  isEmailShaped,\n  isFloatish,\n  isNullish,\n  isNumeric,\n  isObjectId,\n  isTimestamp,\n  isUuid\n}\n\nconst currencies = [\n  '$', '¬¢', '¬£', '¬§', '¬•', '÷è', 'ÿã', 'ﬂæ', 'ﬂø', '‡ß≤', '‡ß≥', '‡ßª',\n  '‡´±', '‡Øπ', '‡∏ø', '·üõ', '‚Ç†', '‚Ç°', '‚Ç¢', '‚Ç£', '‚Ç§', '‚Ç•', '‚Ç¶', '‚Çß',\n  '‚Ç®', '‚Ç©', '‚Ç™', '‚Ç´', '‚Ç¨', '‚Ç≠', '‚ÇÆ', '‚ÇØ', '‚Ç∞', '‚Ç±', '‚Ç≤', '‚Ç≥',\n  '‚Ç¥', '‚Çµ', '‚Ç∂', '‚Ç∑', '‚Ç∏', '‚Çπ', '‚Ç∫', '‚Çª', '‚Çº', '‚ÇΩ', '‚Çæ', '‚Çø',\n  'Í†∏', 'Ô∑º', 'Ôπ©', 'ÔºÑ', 'Ôø†', 'Ôø°', 'Ôø•', 'Ôø¶',\n  'ëøù', 'ëøû', 'ëøü', 'ëø†', 'ûãø', 'û≤∞'\n]\n\nconst boolishPattern = /^([YN]|(TRUE)|(FALSE))$/i\nconst uuidPattern = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/\nconst objectIdPattern = /^[a-f\\d]{24}$/i\nconst dateStringPattern = /^([+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([.,]\\d+(?!:))?)?(\\17[0-5]\\d([.,]\\d+)?)?([zZ]|([+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/\nconst timestampPattern = /^[12]\\d{12}$/\n// const currencyPatternUS = /^\\p{Sc}\\s?[\\d,.]+$/uig\n// const currencyPatternEU = /^[\\d,.]+\\s?\\p{Sc}$/uig\nconst numberishPattern = /^-?[\\d.,]+$/\nconst floatPattern = /\\d\\.\\d/\n// const emailPattern = /^[^@]+@[^@]{2,}\\.[^@]{2,}[^.]$/\nconst emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\nconst nullishPattern = /null/i\n// const emailPattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/igm\n\nfunction isBoolish (value, fieldName) {\n  if (value == null) return false\n  value = String(value).trim()\n  return value.length <= 6 && boolishPattern.test(String(value))\n}\n\nfunction isUuid (value, fieldName) {\n  if (value == null) return false\n  value = String(value).trim()\n  return value.length < 40 && uuidPattern.test(value)\n}\nfunction isObjectId (value, fieldName) {\n  if (value == null) return false\n  value = String(value).trim()\n  return value.length < 40 && objectIdPattern.test(value)\n}\n\nfunction isDateString (value, fieldName) {\n  // not bullet-proof, meant to sniff intention in the data\n  if (value == null) return false\n  if (isDate(value)) return true\n  value = String(value).trim()\n  return value.length < 30 && dateStringPattern.test(value)\n}\n\nfunction isTimestamp (value) {\n  if (value == null) return false\n  value = String(value).trim()\n  return timestampPattern.test(value)\n}\n\nfunction isCurrency (value) {\n  if (value == null) return false\n  value = String(value).trim()\n  const valueSymbol = currencies.find((curSymbol) => value.indexOf(curSymbol) > -1)\n  if (!valueSymbol) return false\n  value = value.replace(valueSymbol, '')\n  return isNumeric(value)\n  // console.log(value, 'currencyPatternUS', currencyPatternUS.test(value), 'currencyPatternEU', currencyPatternEU.test(value));\n  // return currencyPatternUS.test(value) || currencyPatternEU.test(value)\n}\n\nfunction isNumeric (value, fieldName) {\n  // if (value == null) return false\n  value = String(value).trim()\n  return value.length < 30 && numberishPattern.test(value)\n}\n\nfunction isFloatish (value) {\n  return !!(isNumeric(String(value)) && floatPattern.test(String(value)) && !Number.isInteger(value))\n}\n\nfunction isEmailShaped (value) {\n  if (value == null) return false\n  value = String(value).trim()\n  if (value.includes(' ') || !value.includes('@')) return false\n  return value.length >= 5 && value.length < 80 && emailPattern.test(value)\n}\n\nfunction isNullish (value) {\n  return value === null || nullishPattern.test(String(value).trim())\n}\n","import {\n  isBoolish,\n  isCurrency,\n  isDateString,\n  isEmailShaped,\n  isFloatish,\n  isNullish,\n  isNumeric,\n  isObjectId,\n  isTimestamp,\n  isUuid\n} from './utils/type-detectors.js'\n\nconst hasLeadingZero = /^0+/\n\n/**\n * Returns an array of TypeName.\n * @param {any} value - input data\n * @returns {string[]}\n */\nfunction detectTypes (value, strictMatching = true) {\n  const excludedTypes = []\n  const matchedTypes = prioritizedTypes.reduce((types, typeHelper) => {\n    if (typeHelper.check(value)) {\n      if (typeHelper.supercedes) excludedTypes.push(...typeHelper.supercedes)\n      types.push(typeHelper.type)\n    }\n    return types\n  }, [])\n  return !strictMatching ? matchedTypes : matchedTypes.filter((type) => excludedTypes.indexOf(type) === -1)\n}\n\n/**\n * MetaChecks are used to analyze the intermediate results, after the Basic (discreet) type checks are complete.\n * They have access to all the data points before it is finally processed.\n */\nconst MetaChecks = {\n  TYPE_ENUM: {\n    type: 'enum',\n    matchBasicTypes: ['String', 'Number'],\n    check: (typeInfo, { rowCount, uniques }, { enumAbsoluteLimit, enumPercentThreshold }) => {\n      if (!uniques || uniques.length === 0) return typeInfo\n      // TODO: calculate uniqueness using ALL uniques combined from ALL types, this only sees consistently typed data\n      // const uniqueness = rowCount / uniques.length\n      const relativeEnumLimit = Math.min(parseInt(String(rowCount * enumPercentThreshold), 10), enumAbsoluteLimit)\n      if (uniques.length > relativeEnumLimit) return typeInfo\n      // const enumLimit = uniqueness < enumAbsoluteLimit && relativeEnumLimit < enumAbsoluteLimit\n      //   ? enumAbsoluteLimit\n      //   : relativeEnumLimit\n\n      return { enum: uniques, ...typeInfo }\n      // TODO: calculate entropy using a sum of all non-null detected types, not just typeCount\n    }\n  },\n  TYPE_NULLABLE: {\n    type: 'nullable',\n    // matchBasicTypes: ['String', 'Number'],\n    check: (typeInfo, { rowCount, uniques }, { nullableRowsThreshold }) => {\n      if (!uniques || uniques.length === 0) return typeInfo\n      let nullishTypeCount = 0\n      // if (typeInfo && typeInfo.types && typeInfo.types.Null) console.warn('Unexpected type info structure! (.types. key!)');\n\n      if (typeInfo && typeInfo.Null) {\n        nullishTypeCount += typeInfo.Null.count\n      }\n      // if (types.Unknown) {\n      //   nullishTypeCount += types.Unknown.count\n      // }\n      const nullLimit = rowCount * nullableRowsThreshold\n      const isNotNullable = nullishTypeCount <= nullLimit\n      // TODO: Look into specifically checking 'Null' or 'Unknown' type stats\n      return { nullable: !isNotNullable, ...typeInfo }\n      // TODO: calculate entropy using a sum of all non-null detected types, not just typeCount\n    }\n  },\n  TYPE_UNIQUE: {\n    type: 'unique',\n    // matchBasicTypes: ['String', 'Number'],\n    check: (typeInfo, { rowCount, uniques }, { uniqueRowsThreshold }) => {\n      if (!uniques || uniques.length === 0) return typeInfo\n      // const uniqueness = rowCount / uniques.length\n      const isUnique = uniques.length === (rowCount * uniqueRowsThreshold)\n      // TODO: Look into specifically checking 'Null' or 'Unknown' type stats\n      return { unique: isUnique, ...typeInfo }\n      // return {unique: uniqueness >= uniqueRowsThreshold, ...typeInfo}\n      // TODO: calculate entropy using a sum of all non-null detected types, not just typeCount\n    }\n  }\n}\n\n// Basic Type Filters - rudimentary data sniffing used to tally up \"votes\" for a given field\n/**\n * Detect ambiguous field type.\n * Will not affect weighted field analysis.\n */\nconst TYPE_UNKNOWN = {\n  type: 'Unknown',\n  check: (value) => value === undefined || value === 'undefined'\n}\nconst TYPE_OBJECT_ID = {\n  type: 'ObjectId',\n  supercedes: ['String'],\n  check: isObjectId\n}\nconst TYPE_UUID = {\n  type: 'UUID',\n  supercedes: ['String'],\n  check: isUuid\n}\nconst TYPE_BOOLEAN = {\n  type: 'Boolean',\n  supercedes: ['String'],\n  check: isBoolish\n}\nconst TYPE_DATE = {\n  type: 'Date',\n  supercedes: ['String'],\n  check: isDateString\n}\nconst TYPE_TIMESTAMP = {\n  type: 'Timestamp',\n  supercedes: ['String', 'Number'],\n  check: isTimestamp\n}\nconst TYPE_CURRENCY = {\n  type: 'Currency',\n  supercedes: ['String', 'Number'],\n  check: isCurrency\n}\nconst TYPE_FLOAT = {\n  type: 'Float',\n  supercedes: ['String', 'Number'],\n  check: isFloatish\n}\nconst TYPE_NUMBER = {\n  type: 'Number',\n  check: (value) => {\n    if (hasLeadingZero.test(String(value))) return false\n    return !!(value !== null && !Array.isArray(value) && (Number.isInteger(value) || isNumeric(value)))\n  }\n}\nconst TYPE_EMAIL = {\n  type: 'Email',\n  supercedes: ['String'],\n  check: isEmailShaped\n}\nconst TYPE_STRING = {\n  type: 'String',\n  check: (value) => typeof value === 'string' // && value.length >= 1\n}\nconst TYPE_ARRAY = {\n  type: 'Array',\n  check: (value) => {\n    return Array.isArray(value)\n  }\n}\nconst TYPE_OBJECT = {\n  type: 'Object',\n  check: (value) => {\n    return !Array.isArray(value) && value != null && typeof value === 'object'\n  }\n}\nconst TYPE_NULL = {\n  type: 'Null',\n  check: isNullish\n}\n\nconst prioritizedTypes = [\n  TYPE_UNKNOWN,\n  TYPE_OBJECT_ID,\n  TYPE_UUID,\n  TYPE_BOOLEAN,\n  TYPE_DATE,\n  TYPE_TIMESTAMP,\n  TYPE_CURRENCY,\n  TYPE_FLOAT,\n  TYPE_NUMBER,\n  TYPE_NULL,\n  TYPE_EMAIL,\n  TYPE_STRING,\n  TYPE_ARRAY,\n  TYPE_OBJECT\n]\n\n/**\n * Type Rank Map: Use to sort Lowest to Highest\n */\nconst typeRankings = {\n  [TYPE_UNKNOWN.type]: -1,\n  [TYPE_OBJECT_ID.type]: 1,\n  [TYPE_UUID.type]: 2,\n  [TYPE_BOOLEAN.type]: 3,\n  [TYPE_DATE.type]: 4,\n  [TYPE_TIMESTAMP.type]: 5,\n  [TYPE_CURRENCY.type]: 6,\n  [TYPE_FLOAT.type]: 7,\n  [TYPE_NUMBER.type]: 8,\n  [TYPE_NULL.type]: 10,\n  [TYPE_EMAIL.type]: 11,\n  [TYPE_STRING.type]: 12,\n  [TYPE_ARRAY.type]: 13,\n  [TYPE_OBJECT.type]: 14\n}\n\nexport {\n  typeRankings,\n  prioritizedTypes,\n  detectTypes,\n  MetaChecks,\n  TYPE_UNKNOWN,\n  TYPE_OBJECT_ID,\n  TYPE_UUID,\n  TYPE_BOOLEAN,\n  TYPE_DATE,\n  TYPE_TIMESTAMP,\n  TYPE_CURRENCY,\n  TYPE_FLOAT,\n  TYPE_NUMBER,\n  TYPE_NULL,\n  TYPE_EMAIL,\n  TYPE_STRING,\n  TYPE_ARRAY,\n  TYPE_OBJECT\n}\n// const TYPE_ENUM = {\n//   type: \"String\",\n//   check: (value, fieldInfo, schemaInfo) => {\n//     // Threshold set to 5% - 5 (or fewer) out of 100 unique strings should enable 'enum' mode\n//     if (schemaInfo.inputRowCount < 100) return false; // disabled if set too small\n//   }\n// };\n","const debug = require('debug')\n// import FP from 'functional-promises';\n// import { detectTypes } from './type-helpers.js'\n// import StatsMap from 'stats-map';\n// import mem from 'mem';\nimport { detectTypes, MetaChecks, typeRankings } from './type-helpers.mjs'\nconst log = debug('schema-builder:index')\n// const cache = new StatsMap();\n// const detectTypesCached = mem(_detectTypes, { cache, maxAge: 1000 * 600 }) // keep cache up to 10 minutes\n\nexport { schemaBuilder, pivotFieldDataByType, getNumberRangeStats, isValidDate }\n\nfunction isValidDate (date) {\n  date = date instanceof Date ? date : new Date(date)\n  return isNaN(date.getFullYear()) ? false : date\n}\n\nconst parseDate = (date) => {\n  date = isValidDate(date)\n  return date && date.toISOString && date.toISOString()\n}\n\n/**\n * Includes the results of main top-level schema.\n * @typedef TypeSummary\n * @type {{\n *  fields: Object.<string, FieldInfo>;\n *  totalRows: number;\n *  nestedTypes?: Object.<string, TypeSummary>;\n * }}\n */\n\n/**\n * Describes one or more potential types discovered for a field. The `types` object will have a `$ref` key if any nested structures were found.\n * @typedef FieldInfo\n * @type {object}\n * @property {Object.<string, string | FieldTypeSummary>} types - field stats organized by type\n * @property {boolean} nullable - is the field nullable\n * @property {boolean} unique - is the field unique\n * @property {string[]|number[]} [enum] - enumeration detected, the values are listed on this property.\n */\n\n/**\n * Contains stats for a given field's (potential) type.\n *\n * TODO: Add string property for the type name.\n *    We currently uses object key structure: {\"String\": FieldTypeSummary}\n * @typedef FieldTypeSummary\n * @type {Object}\n * @property {string} [typeAlias] - for nested type support.\n * @property {AggregateSummary} [value] - extracted field values, placed into an array. This simplifies (at expense of memory) type analysis and summarization when creating the `AggregateSummary`.\n * @property {AggregateSummary} [length] - summary of array of string (or decimal) sizes, pre processing into an AggregateSummary\n * @property {AggregateSummary} [precision] - only applies to Float types. Summary of array of sizes of the value both before and after the decimal.\n * @property {AggregateSummary} [scale] - only applies to Float types. Summary of array of sizes of the value after the decimal.\n * @property {string[]|number[]} [enum] - if enum rules were triggered will contain the detected unique values.\n * @property {number} count - number of times the type was matched\n * @property {number} rank - absolute priority of the detected TypeName, defined in the object `typeRankings`\n */\n\n/**\n * This is an internal intermediate structure.\n * It mirrors the `FieldSummary` type it will become.\n * @private\n * @typedef InternalFieldTypeData\n * @type {Object}\n * @property {any[]} [value] - array of values, pre processing into an AggregateSummary\n * @property {number[]} [length] - array of string (or decimal) sizes, pre processing into an AggregateSummary\n * @property {number[]} [precision] - only applies to Float types. Array of sizes of the value both before and after the decimal.\n * @property {number[]} [scale] - only applies to Float types. Array of sizes of the value after the decimal.\n * @property {number} [count] - number of times the type was matched\n * @property {number} [rank] - absolute priority of the detected TypeName, defined in the object `typeRankings`\n *\n */\n\n/**\n * Used to represent a number series of any size.\n * Includes the lowest (`min`), highest (`max`), mean/average (`mean`) and measurements at certain `percentiles`.\n * @typedef AggregateSummary\n * @type {{min: number, max: number, mean: number, p25: number, p33: number, p50: number, p66: number, p75: number, p99: number}}\n */\n\n/**\n * This callback is displayed as a global member.\n * @callback progressCallback\n * @param {{totalRows: number, currentRow: number}} progress - The current progress of processing.\n */\n\n/**\n * schemaBuilder() is the main function and where all the analysis & processing happens.\n * @param {string} schemaName The name, or name prefix to use when assembling results. Helpful with nested types (aka sub-types.)\n * @param {Array<Object>} input - The input data to analyze. Must be an array of objects.\n * @param {{\n *   onProgress?: progressCallback,\n *   enumMinimumRowCount?: number,\n *   enumAbsoluteLimit?: number,\n *   enumPercentThreshold?: number,\n *   nullableRowsThreshold?: number,\n *   uniqueRowsThreshold?: number,\n *   strictMatching?: boolean,\n *   disableNestedTypes?: boolean\n * }} [options] - Optional parameters\n * @returns {Promise<TypeSummary>} Returns and\n */\nfunction schemaBuilder (\n  schemaName,\n  input,\n  options = {\n    onProgress: ({ totalRows, currentRow }) => {},\n    strictMatching: true,\n    disableNestedTypes: false,\n    enumMinimumRowCount: 100,\n    enumAbsoluteLimit: 10,\n    enumPercentThreshold: 0.01,\n    nullableRowsThreshold: 0.02,\n    uniqueRowsThreshold: 1.0\n  }\n) {\n  if (!Array.isArray(input) || typeof input !== 'object') throw Error('Input Data must be an Array of Objects')\n  if (typeof input[0] !== 'object') throw Error('Input Data must be an Array of Objects')\n  if (input.length < 5) throw Error('Analysis requires at least 5 records. (Use 200+ for great results.)')\n  const {\n    onProgress = ({ totalRows, currentRow }) => {},\n    strictMatching = true,\n    disableNestedTypes = false,\n    enumMinimumRowCount = 100, enumAbsoluteLimit = 10, enumPercentThreshold = 0.01,\n    nullableRowsThreshold = 0.02,\n    uniqueRowsThreshold = 1.0\n  } = options\n  const isEnumEnabled = input.length >= enumMinimumRowCount\n  const nestedData = {}\n\n  log('Starting')\n  return Promise.resolve(input)\n    .then(pivotRowsGroupedByType)\n    .then(condenseFieldData)\n    .then(async (schema) => {\n      log('Built summary from Field Type data.')\n      // console.log('genSchema', JSON.stringify(genSchema, null, 2))\n\n      const fields = Object.keys(schema.fields)\n        .reduce((fieldInfo, fieldName) => {\n          const typesInfo = schema.fields[fieldName]\n          /* //* @type {FieldInfo} */\n          fieldInfo[fieldName] = {\n            ...typesInfo\n          }\n          fieldInfo[fieldName] = MetaChecks.TYPE_ENUM.check(fieldInfo[fieldName],\n            { rowCount: input.length, uniques: schema.uniques && schema.uniques[fieldName] },\n            { enumAbsoluteLimit, enumPercentThreshold })\n          fieldInfo[fieldName] = MetaChecks.TYPE_NULLABLE.check(fieldInfo[fieldName],\n            { rowCount: input.length, uniques: schema.uniques && schema.uniques[fieldName] },\n            { nullableRowsThreshold })\n          fieldInfo[fieldName] = MetaChecks.TYPE_UNIQUE.check(fieldInfo[fieldName],\n            { rowCount: input.length, uniques: schema.uniques && schema.uniques[fieldName] },\n            { uniqueRowsThreshold })\n          // typesInfo.$ref\n          const isIdentity = (typesInfo.Number || typesInfo.UUID) && fieldInfo[fieldName].unique && /id$/i.test(fieldName)\n          if (isIdentity) {\n            fieldInfo[fieldName].identity = true\n          }\n\n          if (schema.uniques && schema.uniques[fieldName]) {\n            fieldInfo[fieldName].uniqueCount = schema.uniques[fieldName].length\n          }\n          return fieldInfo\n        }, {})\n\n      return {\n        fields,\n        totalRows: schema.totalRows,\n        nestedTypes: disableNestedTypes ? undefined : await nestedSchemaBuilder(nestedData)\n      }\n    })\n\n  function nestedSchemaBuilder (nestedData) {\n    return Object.entries(nestedData)\n      .reduce(async (nestedTypeSummaries, [fullTypeName, data]) => {\n        const nameParts = fullTypeName.split('.')\n        // @ts-ignore\n        const nameSuffix = nameParts[nameParts.length - 1]\n        nestedTypeSummaries[fullTypeName] = await schemaBuilder(nameSuffix, data, options)\n        return nestedTypeSummaries\n      }, {})\n  }\n\n  /**\n     * @param {object[]} docs\n     * @returns {{ totalRows: number; uniques: { [x: string]: any[]; }; fieldsData: { [x: string]: InternalFieldTypeData[]; }; }} schema\n     */\n  function pivotRowsGroupedByType (docs) {\n    const detectedSchema = { uniques: isEnumEnabled ? {} : null, fieldsData: {}, totalRows: null }\n    log(`  About to examine every row & cell. Found ${docs.length} records...`)\n    const pivotedSchema = docs.reduce(evaluateSchemaLevel, detectedSchema)\n    log('  Extracted data points from Field Type analysis')\n    return pivotedSchema\n  }\n\n  /**\n     * @param {{ totalRows: number; uniques: { [x: string]: any[]; }; fieldsData: { [x: string]: InternalFieldTypeData[]; }; }} schema\n     * @param {{ [x: string]: any; }} row\n     * @param {number} index\n     * @param {any[]} array\n     */\n    function evaluateSchemaLevel (schema, row, index, array) { // eslint-disable-line\n    schema.totalRows = schema.totalRows || array.length\n    const fieldNames = Object.keys(row)\n    log(`Processing Row # ${index + 1}/${schema.totalRows}...`)\n    fieldNames.forEach((fieldName, index, array) => {\n      if (index === 0) log(`Found ${array.length} Column(s)!`)\n      const value = row[fieldName]\n      const typeFingerprint = getFieldMetadata({ value, strictMatching })\n      const typeNames = Object.keys(typeFingerprint)\n      const isPossibleEnumType = typeNames.includes('Number') || typeNames.includes('String')\n\n      if (!disableNestedTypes) {\n        // TODO: Review hackey pattern here (buffers too much, better association of custom types, see `$ref`)\n        // Steps: 1. Check if Array of Objects, 2. Add to local `nestedData` to hold data for post-processing.\n        if (Array.isArray(value) && value.length >= 1 && typeof value[0] === 'object') {\n          nestedData[`${schemaName}.${fieldName}`] = nestedData[`${schemaName}.${fieldName}`] || []\n          nestedData[`${schemaName}.${fieldName}`].push(...value)\n          typeFingerprint.$ref = `${schemaName}.${fieldName}`\n        }\n      }\n\n      if (isEnumEnabled && isPossibleEnumType) {\n        schema.uniques[fieldName] = schema.uniques[fieldName] || []\n        if (!schema.uniques[fieldName].includes(value)) schema.uniques[fieldName].push(row[fieldName])\n        // } else {\n        //   schema.uniques[fieldName] = null\n      }\n      schema.fieldsData[fieldName] = schema.fieldsData[fieldName] || []\n      schema.fieldsData[fieldName].push(typeFingerprint)\n    })\n    onProgress({ totalRows: schema.totalRows, currentRow: index + 1 })\n    return schema\n  }\n}\n\n/**\n * Returns a fieldName keyed-object with type detection summary data.\n *\n * ### Example `fieldSummary`:\n * ```\n * {\n *  \"id\": {\n *    \"UUID\": {\n *      \"rank\": 2,\n *      \"count\": 25\n *    },\n *    \"Number\": {\n *      \"rank\": 8,\n *      \"count\": 1,\n *      \"value\": {\n *        \"min\": 9999999,\n *        \"mean\": 9999999,\n *        \"max\": 9999999,\n *        \"p25\": 9999999,\n *        \"p33\": 9999999,\n *        \"p50\": 9999999,\n *        \"p66\": 9999999,\n *        \"p75\": 9999999,\n *        \"p99\": 9999999\n *      }\n *    }\n *  }\n * }\n * ```\n *\n * @param {{ fieldsData: Object.<string, InternalFieldTypeData[]>, uniques: Object.<string, any[]>, totalRows: number}} schema\n * @returns {{\n *  fields: Object.<string, Object.<string, FieldTypeSummary>>,\n *  uniques: Object.<string, any[]>,\n *  totalRows: number\n * }}\n */\nfunction condenseFieldData (schema) {\n  const { fieldsData } = schema\n  const fieldNames = Object.keys(fieldsData)\n\n  /** @type {Object.<string, Object.<string, FieldTypeSummary>>} */\n  const fieldSummary = {}\n  log(`Pre-condenseFieldSizes(fields[fieldName]) for ${fieldNames.length} columns`)\n  fieldNames\n    .forEach((fieldName) => {\n      /** @type {Object.<string, InternalFieldTypeData>} */\n      const pivotedData = pivotFieldDataByType(fieldsData[fieldName])\n      fieldSummary[fieldName] = condenseFieldSizes(pivotedData)\n      if (pivotedData.$ref && pivotedData.$ref.count > 1) {\n        // Prevent overriding the $ref type label\n        // 1. Find the first $ref\n        const refType = fieldsData[fieldName].find(typeRefs => typeRefs.$ref)\n        fieldSummary[fieldName].$ref.typeAlias = refType.$ref\n      }\n\n      // console.log(`fieldSummary[${fieldName}]`, fieldSummary[fieldName])\n    })\n  log('Post-condenseFieldSizes(fields[fieldName])')\n  log('Replaced fieldData with fieldSummary')\n  return { fields: fieldSummary, uniques: schema.uniques, totalRows: schema.totalRows }\n}\n\n/* //*\n * @param {Object.<string, { value?, length?, scale?, precision?, invalid? }>[]} typeSizeData - An object containing the\n * @returns {Object.<string, InternalFieldTypeData>}\n */\nfunction pivotFieldDataByType (typeSizeData) {\n  // const blankTypeSums = () => ({ length: 0, scale: 0, precision: 0 })\n  log(`Processing ${typeSizeData.length} type guesses`)\n  return typeSizeData.reduce((pivotedData, currentTypeGuesses) => {\n    Object.entries(currentTypeGuesses)\n      .map(([typeName, { value, length, scale, precision }]) => {\n      // console.log(typeName, JSON.stringify({ length, scale, precision }))\n        pivotedData[typeName] = pivotedData[typeName] || { typeName, count: 0 }\n        // if (!pivotedData[typeName].count) pivotedData[typeName].count = 0\n        if (Number.isFinite(length) && !pivotedData[typeName].length) pivotedData[typeName].length = []\n        if (Number.isFinite(scale) && !pivotedData[typeName].scale) pivotedData[typeName].scale = []\n        if (Number.isFinite(precision) && !pivotedData[typeName].precision) pivotedData[typeName].precision = []\n        if (Number.isFinite(value) && !pivotedData[typeName].value) pivotedData[typeName].value = []\n\n        pivotedData[typeName].count++\n        // if (invalid != null) pivotedData[typeName].invalid++\n        if (length) pivotedData[typeName].length.push(length)\n        if (scale) pivotedData[typeName].scale.push(scale)\n        if (precision) pivotedData[typeName].precision.push(precision)\n        if (value) pivotedData[typeName].value.push(value)\n        // pivotedData[typeName].rank = typeRankings[typeName]\n        return pivotedData[typeName]\n      })\n    return pivotedData\n  }, {})\n  /*\n  > Example of sumCounts at this point\n  {\n    Float: { count: 4, scale: [ 5, 5, 5, 5 ], precision: [ 2, 2, 2, 2 ] },\n    String: { count: 3, length: [ 2, 3, 6 ] },\n    Number: { count: 1, length: [ 6 ] }\n  }\n*/\n}\n\n/**\n * Internal function which analyzes and summarizes each columns data by type. Sort of a histogram of significant points.\n * @private\n * @param {Object.<string, InternalFieldTypeData>} pivotedDataByType - a map organized by Type keys (`TypeName`), containing extracted data for the returned `FieldSummary`.\n * @returns {Object.<string, FieldTypeSummary>} - The final output, with histograms of significant points\n */\nfunction condenseFieldSizes (pivotedDataByType) {\n  /** @type {Object.<string, FieldTypeSummary>} */\n  const aggregateSummary = {}\n  log('Starting condenseFieldSizes()')\n  Object.keys(pivotedDataByType)\n    .map((typeName) => {\n      aggregateSummary[typeName] = {\n        // typeName,\n        rank: typeRankings[typeName] || -42,\n        count: pivotedDataByType[typeName].count\n      }\n      if (typeName === '$ref') {\n        // console.log('pivotedDataByType.$ref', JSON.stringify(pivotedDataByType.$ref, null, 2));\n        aggregateSummary[typeName].typeAlias = pivotedDataByType.$ref;\n      } else {\n        if (pivotedDataByType[typeName].value) aggregateSummary[typeName].value = getNumberRangeStats(pivotedDataByType[typeName].value)\n        if (pivotedDataByType[typeName].length) aggregateSummary[typeName].length = getNumberRangeStats(pivotedDataByType[typeName].length, true)\n        if (pivotedDataByType[typeName].scale) aggregateSummary[typeName].scale = getNumberRangeStats(pivotedDataByType[typeName].scale, true)\n        if (pivotedDataByType[typeName].precision) aggregateSummary[typeName].precision = getNumberRangeStats(pivotedDataByType[typeName].precision, true)\n      }\n\n      // if (pivotedDataByType[typeName].invalid) { aggregateSummary[typeName].invalid = pivotedDataByType[typeName].invalid }\n\n      if (['Timestamp', 'Date'].indexOf(typeName) > -1) {\n        aggregateSummary[typeName].value = formatRangeStats(aggregateSummary[typeName].value, parseDate)\n      }\n    })\n  log('Done condenseFieldSizes()...')\n  return aggregateSummary\n}\n\nfunction getFieldMetadata ({\n  value,\n  strictMatching\n}) {\n  // Get initial pass at the data with the TYPE_* `.check()` methods.\n  const typeGuesses = detectTypes(value, strictMatching)\n\n  // Assign initial metadata for each matched type below\n  return typeGuesses.reduce((analysis, typeGuess, rank) => {\n    let length\n    let precision\n    let scale\n\n    analysis[typeGuess] = { rank: rank + 1 }\n\n    if (typeGuess === 'Array') {\n      length = value.length\n      analysis[typeGuess] = { ...analysis[typeGuess], length }\n    }\n    if (typeGuess === 'Float') {\n      value = parseFloat(value)\n      analysis[typeGuess] = { ...analysis[typeGuess], value }\n      const significandAndMantissa = String(value).split('.')\n      if (significandAndMantissa.length === 2) {\n        precision = significandAndMantissa.join('').length // total # of numeric positions before & after decimal\n        scale = significandAndMantissa[1].length\n        analysis[typeGuess] = { ...analysis[typeGuess], precision, scale }\n      }\n    }\n    if (typeGuess === 'Number') {\n      value = Number(value)\n      analysis[typeGuess] = { ...analysis[typeGuess], value }\n    }\n    if (typeGuess === 'Date' || typeGuess === 'Timestamp') {\n      const checkedDate = isValidDate(value)\n      if (checkedDate) {\n        analysis[typeGuess] = { ...analysis[typeGuess], value: checkedDate.getTime() }\n      // } else {\n      //   analysis[typeGuess] = { ...analysis[typeGuess], invalid: true, value: value }\n      }\n    }\n    if (typeGuess === 'String' || typeGuess === 'Email') {\n      length = String(value).length\n      analysis[typeGuess] = { ...analysis[typeGuess], length }\n    }\n    return analysis\n  }, {})\n}\n\n/**\n * Accepts an array of numbers and returns summary data about\n *  the range & spread of points in the set.\n *\n * @param {number[]} numbers - sequence of unsorted data points\n * @returns {AggregateSummary}\n */\nfunction getNumberRangeStats (numbers, useSortedDataForPercentiles = false) {\n  if (!numbers || numbers.length < 1) return undefined\n  const sortedNumbers = numbers.slice().sort((a, b) => a < b ? -1 : a === b ? 0 : 1)\n  const sum = numbers.reduce((a, b) => a + b, 0)\n  if (useSortedDataForPercentiles) numbers = sortedNumbers\n  return {\n    // size: numbers.length,\n    min: sortedNumbers[0],\n    mean: sum / numbers.length,\n    max: sortedNumbers[numbers.length - 1],\n    p25: numbers[parseInt(String(numbers.length * 0.25), 10)],\n    p33: numbers[parseInt(String(numbers.length * 0.33), 10)],\n    p50: numbers[parseInt(String(numbers.length * 0.50), 10)],\n    p66: numbers[parseInt(String(numbers.length * 0.66), 10)],\n    p75: numbers[parseInt(String(numbers.length * 0.75), 10)],\n    p99: numbers[parseInt(String(numbers.length * 0.99), 10)]\n  }\n}\n\n/**\n *\n */\nfunction formatRangeStats (stats, formatter) {\n  // if (!stats || !formatter) return undefined\n  return {\n    // size: stats.size,\n    min: formatter(stats.min),\n    mean: formatter(stats.mean),\n    max: formatter(stats.max),\n    p25: formatter(stats.p25),\n    p33: formatter(stats.p33),\n    p50: formatter(stats.p50),\n    p66: formatter(stats.p66),\n    p75: formatter(stats.p75),\n    p99: formatter(stats.p99)\n  }\n}\n\nexport {\n  // pivotRowsGroupedByType as _pivotRowsGroupedByType,\n  // evaluateSchemaLevel as _evaluateSchemaLevel,\n  condenseFieldData as _condenseFieldData,\n  pivotFieldDataByType as _pivotFieldDataByType,\n  getNumberRangeStats as _getNumberRangeStats,\n  formatRangeStats as _formatRangeStats\n}\n"],"names":["objectProto","nativeObjectToString","symToStringTag"],"mappings":"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"}